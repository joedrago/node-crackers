// Generated by CoffeeScript 1.9.3
(function() {
  var ComicGenerator, IndexGenerator, cfs, constants, fs, log, path, template;

  cfs = require('./cfs');

  constants = require('./constants');

  fs = require('fs');

  log = require('./log');

  path = require('path');

  template = require('./template');

  ComicGenerator = (function() {
    function ComicGenerator(rootDir, dir) {
      var pieces, tmp;
      this.rootDir = rootDir;
      this.dir = dir;
      this.indexFilename = cfs.join(this.dir, constants.INDEX_FILENAME);
      this.images = cfs.listImages(cfs.join(this.dir, constants.IMAGES_DIR));
      this.rootDir = this.rootDir.replace(path.sep + "$", "");
      tmp = this.dir.substr(this.rootDir.length + 1);
      pieces = tmp.split(path.sep);
      this.title = pieces.join(" | ");
    }

    ComicGenerator.prototype.generate = function() {
      var href, i, image, len, listText, outputText, parsed, ref;
      if (this.images.length === 0) {
        log.error("No images in '" + this.dir + "', removing index");
        fs.unlinkSync(this.indexFilename);
        return false;
      }
      listText = "";
      ref = this.images;
      for (i = 0, len = ref.length; i < len; i++) {
        image = ref[i];
        parsed = path.parse(image);
        href = constants.IMAGES_DIR + "/" + parsed.base;
        href = href.replace("#", "%23");
        listText += template('image', {
          href: href
        });
      }
      outputText = template('comic', {
        title: this.title,
        list: listText
      });
      cfs.writeMetadata(this.dir, {
        type: 'comic',
        title: this.title,
        pages: this.images.length,
        count: 1
      });
      fs.writeFileSync(this.indexFilename, outputText);
      log.verbose("Wrote " + this.indexFilename);
      log.progress("Generated comic: " + this.title);
      return true;
    };

    return ComicGenerator;

  })();

  IndexGenerator = (function() {
    function IndexGenerator(rootDir, dir) {
      this.rootDir = rootDir;
      this.dir = dir;
      this.indexFilename = cfs.join(this.dir, constants.INDEX_FILENAME);
      this.rootDir = this.rootDir.replace(path.sep + "$", "");
      this.title = this.dir.substr(this.rootDir.length + 1);
      if (this.title.length === 0) {
        this.title = "Crackers";
      }
    }

    IndexGenerator.prototype.generate = function() {
      var file, i, indexList, len, listText, outputText, totalCount;
      indexList = cfs.gatherIndex(this.dir);
      listText = "";
      totalCount = 0;
      for (i = 0, len = indexList.length; i < len; i++) {
        file = indexList[i];
        totalCount += file.count;
        switch (file.type) {
          case 'comic':
            listText += template('ie_comic', {
              path: file.path,
              title: file.path
            });
            break;
          case 'index':
            listText += template('ie_index', {
              path: file.path,
              title: file.path,
              count: file.count
            });
        }
      }
      outputText = template('index', {
        title: this.title,
        list: listText
      });
      cfs.writeMetadata(this.dir, {
        type: 'index',
        count: totalCount
      });
      fs.writeFileSync(this.indexFilename, outputText);
      log.verbose("Wrote " + this.indexFilename);
      return log.progress("Generated index: " + this.title + " (" + totalCount + " comics)");
    };

    return IndexGenerator;

  })();

  module.exports = {
    IndexGenerator: IndexGenerator,
    ComicGenerator: ComicGenerator
  };

}).call(this);
