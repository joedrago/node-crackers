// Generated by CoffeeScript 1.9.3
(function() {
  var ComicGenerator, CoverGenerator, cfs, constants, fs, log, path, template;

  cfs = require('./cfs');

  constants = require('./constants');

  fs = require('fs');

  log = require('./log');

  path = require('path');

  template = require('./template');

  CoverGenerator = require('./CoverGenerator');

  ComicGenerator = (function() {
    function ComicGenerator(rootDir, dir, prevDir, nextDir, force) {
      var pieces;
      this.rootDir = rootDir;
      this.dir = dir;
      this.prevDir = prevDir;
      this.nextDir = nextDir;
      this.force = force;
      this.indexFilename = cfs.join(this.dir, constants.INDEX_FILENAME);
      this.imagesDir = cfs.join(this.dir, constants.IMAGES_DIR);
      this.images = cfs.listImages(this.imagesDir);
      this.relativeRoot = path.relative(this.dir, this.rootDir);
      if (this.relativeRoot.length === 0) {
        this.relativeRoot = '.';
      }
      this.rootDir = this.rootDir.replace(path.sep + "$", "");
      this.relativeDir = this.dir.substr(this.rootDir.length + 1);
      pieces = this.relativeDir.split(path.sep);
      this.title = pieces.join(" | ");
    }

    ComicGenerator.prototype.generate = function() {
      var coverGenerator, i, image, jsList, len, listText, outputText, parsed, ref, url;
      if (this.images.length === 0) {
        log.error("No images in '" + this.dir + "', removing index");
        fs.unlinkSync(this.indexFilename);
        cfs.removeMetadata(this.dir);
        return false;
      }
      listText = "";
      jsList = "";
      ref = this.images;
      for (i = 0, len = ref.length; i < len; i++) {
        image = ref[i];
        parsed = path.parse(image);
        url = constants.IMAGES_DIR + "/" + parsed.base;
        url = url.replace("#", "%23");
        listText += template('image_html', {
          url: url
        });
        jsList += template('image_js', {
          url: url
        });
      }
      outputText = template('comic_html', {
        generator: 'comic',
        dir: this.relativeDir,
        root: this.relativeRoot,
        title: this.title,
        list: listText,
        jslist: jsList,
        prev: this.prevDir,
        next: this.nextDir
      });
      coverGenerator = new CoverGenerator(this.rootDir, this.dir, [this.images[0]], this.force);
      coverGenerator.generate();
      cfs.writeMetadata(this.dir, {
        type: 'comic',
        title: this.title,
        pages: this.images.length,
        count: 1,
        cover: constants.COVER_FILENAME,
        recentcover: constants.RECENT_COVER_FILENAME,
        timestamp: cfs.dirTime(this.imagesDir)
      });
      fs.writeFileSync(this.indexFilename, outputText);
      log.verbose("Wrote " + this.indexFilename);
      log.progress("Generated comic: " + this.title + " (" + this.images.length + " pages, next: '" + this.nextDir + "')");
      return true;
    };

    return ComicGenerator;

  })();

  module.exports = ComicGenerator;

}).call(this);
